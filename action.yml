name: "Publish API Docs"
description: "Publish API Docs to ReadMe, including validation"

inputs:
  openapi_file_path:
    description: "Path to the OpenAPI specification file"
    required: true
  readme_slug:
    description: "Slug to use for the API definition in ReadMe, see https://docs.readme.com/main/docs/rdme#specifying-page-slugs"
    required: true
  readme_api_key:
    description: "API key for ReadMe (pass secrets.README_API_KEY from your workflow)"
    required: true
  spectral_rules_url:
    description: "URL to the Spectral rules file"
    required: false
    default: "https://raw.githubusercontent.com/flipdishbytes/spectral-rules/main/.spectral.yaml"
  readme_version:
    description: "Version to use when uploading to ReadMe"
    required: false
    default: "v3.0"
  skip_readme_publish:
    description: "Skip publishing to ReadMe (useful for validation-only runs)"
    required: false
    default: "false"
  skip_spectral:
    description: "Skip Spectral linting (useful for validation-only runs)"
    required: false
    default: "false"
  skip_validate_readme:
    description: "Skip ReadMe OpenAPI validation (useful for linting-only runs)"
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Download Spectral rules
      if: ${{ inputs.skip_spectral != 'true' }}
      shell: bash
      run: |
        curl -o .spectral.yaml ${{ inputs.spectral_rules_url }}

    - name: Show Spectral ruleset
      if: ${{ inputs.skip_spectral != 'true' }}
      shell: bash
      run: cat .spectral.yaml

    - name: Node.js setup
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install Spectral
      if: ${{ inputs.skip_spectral != 'true' }}
      shell: bash
      run: npm install -g @stoplight/spectral-cli

    - name: Lint OpenAPI with Spectral
      if: ${{ inputs.skip_spectral != 'true' }}
      shell: bash
      run: spectral lint ${{ inputs.openapi_file_path }} --ruleset .spectral.yaml --verbose

    - name: Validate OpenAPI spec with ReadMe
      if: ${{ inputs.skip_validate_readme != 'true' }}
      uses: readmeio/rdme@v10
      with:
        rdme: openapi validate ${{ inputs.openapi_file_path }}

    # readmecli docs: https://github.com/readmeio/rdme/blob/next/documentation/commands/openapi.md#rdme-openapi-upload-spec
    # slug docs: https://docs.readme.com/main/docs/rdme#specifying-page-slugs
    # GHAs examples: https://docs.readme.com/main/docs/rdme#github-actions-examples
    - name: Publish to ReadMe
      if: ${{ inputs.skip_readme_publish != 'true' }}
      uses: readmeio/rdme@v10
      with:
        rdme: openapi upload ${{ inputs.openapi_file_path }} --version=${{ inputs.readme_version }} --key=${{ inputs.readme_api_key }} --slug=${{ inputs.readme_slug }}
